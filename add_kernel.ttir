#loc = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":30:0)
#loc15 = loc("x_ptr"(#loc))
#loc16 = loc("y_ptr"(#loc))
#loc17 = loc("output_ptr"(#loc))
#loc18 = loc("n_elements"(#loc))
module {
  tt.func public @add_kernel(%x_ptr: !tt.ptr<f32> loc("x_ptr"(#loc)), %y_ptr: !tt.ptr<f32> loc("y_ptr"(#loc)), %output_ptr: !tt.ptr<f32> loc("output_ptr"(#loc)), %n_elements: i32 loc("n_elements"(#loc))) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %pid = tt.get_program_id x : i32 loc(#loc19)
    %block_start = arith.muli %pid, %c64_i32 : i32 loc(#loc20)
    %offsets = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc21)
    %offsets_0 = tt.splat %block_start : i32 -> tensor<64xi32> loc(#loc22)
    %offsets_1 = arith.addi %offsets_0, %offsets : tensor<64xi32> loc(#loc22)
    %mask = tt.splat %n_elements : i32 -> tensor<64xi32> loc(#loc23)
    %mask_2 = arith.cmpi slt, %offsets_1, %mask : tensor<64xi32> loc(#loc23)
    %x = tt.splat %x_ptr : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc24)
    %x_3 = tt.addptr %x, %offsets_1 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc24)
    %x_4 = tt.load %x_3, %mask_2 : tensor<64x!tt.ptr<f32>> loc(#loc25)
    %y = tt.splat %y_ptr : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc26)
    %y_5 = tt.addptr %y, %offsets_1 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc26)
    %y_6 = tt.load %y_5, %mask_2 : tensor<64x!tt.ptr<f32>> loc(#loc27)
    %output = arith.addf %x_4, %y_6 : tensor<64xf32> loc(#loc28)
    %0 = tt.splat %output_ptr : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc12)
    %1 = tt.addptr %0, %offsets_1 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc12)
    tt.store %1, %output, %mask_2 : tensor<64x!tt.ptr<f32>> loc(#loc13)
    tt.return loc(#loc14)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":39:24)
#loc3 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":44:24)
#loc4 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":45:41)
#loc5 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":45:28)
#loc6 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":47:21)
#loc7 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":50:24)
#loc8 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":50:16)
#loc9 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":51:24)
#loc10 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":51:16)
#loc11 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":52:17)
#loc12 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":54:26)
#loc13 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":54:35)
#loc14 = loc("/data00/home/son.nguyen/workspace/triton_dev/triton/python/tutorials/01-vector-add.py":54:4)
#loc19 = loc("pid"(#loc2))
#loc20 = loc("block_start"(#loc3))
#loc21 = loc("offsets"(#loc4))
#loc22 = loc("offsets"(#loc5))
#loc23 = loc("mask"(#loc6))
#loc24 = loc("x"(#loc7))
#loc25 = loc("x"(#loc8))
#loc26 = loc("y"(#loc9))
#loc27 = loc("y"(#loc10))
#loc28 = loc("output"(#loc11))
